service: backend-shop

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2 
  environment:
    PRODUCTS_TABLE: ${self:custom.productsTable}
    STOCK_TABLE: ${self:custom.stockTable}
    SQS_QUEUE_URL:
      Ref: CatalogItemsQueue
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Scan
      Resource: 
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.productsTable}
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.stockTable}
    - Effect: Allow
      Action:
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
      Resource: 
        - Fn::GetAtt: [CatalogItemsQueue, Arn]
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource: arn:aws:s3:::${self:custom.importFilesBucket}/*

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: "*"
  
  importFileParser:
    handler: importFileParser.handler
    events:
      - s3:
          bucket: ${self:custom.importFilesBucket}
          event: s3:ObjectCreated:*
          existing: true

  catalogBatchProcess:
    handler: catalogBatchProcess.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - CatalogItemsQueue
              - Arn
          batchSize: 5

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue

custom:
  productsTable: products
  stockTable: stock
  importFilesBucket: some-b-2345